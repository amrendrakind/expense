{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","year","date","getFullYear","month","toLocaleString","day","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillheight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","placeholder","min","step","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97552be9.chunk.js","sourcesContent":["import './Card.css'\n\nfunction Card (props){\n    const classes = 'card ' + props.className\n    return (\n    <div className={classes}>\n        {props.children}\n    </div>\n    )\n}\nexport default Card","import React from \"react\";\nimport './ExpenseFilter.css'\n\nconst ExpenseFilter = (props)=>{\n    const dropdownChangeHandler=(event)=>{\n        props.onChangeFilter(event.target.value)\n    }\n    return(\n    <div className=\"expense-filter\">\n        <div className = \"expense-filter__control\">\n            <label>Filter By Year</label>\n            <select value={props.selected} onChange={dropdownChangeHandler}>\n                <option value='2023'>2023</option>\n                <option value='2022'>2022</option>\n                <option value='2021'>2021</option>\n                <option value='2020'>2020</option>\n            </select>\n        </div>\n    </div>\n    )\n}\nexport default ExpenseFilter","import './ExpenseDate.css'\nfunction ExpenseDate(props) {\n    const year = props.date.getFullYear();\n    const month = props.date.toLocaleString('en-US', { month: 'long' })\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' })\n\n    return (\n        <div className = \"expense-date\">\n            <div className = \"expense-date__month\">{month}</div>\n            <div className = \"expense-date__year\">{year}</div>\n            <div className = \"expense-date__day\">{day}</div>\n        </div>)\n}\nexport default ExpenseDate","import React from 'react'\nimport './ExpenseItem.css'\nimport ExpenseDate from './ExpenseDate'\nimport Card from '../UI/Card'\n\nfunction ExpenseItem(props) {\n    return (\n    <li>\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.date} />\n            <div className=\"expense-item__description\">\n                <h2>{props.title}</h2>\n                <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n        </Card>\n    </li>\n    )\n}\n\nexport default ExpenseItem","import ExpenseItem from \"./ExpenseItem\"\nimport './ExpensesList.css'\n\nconst ExpensesList = (props)=>{\n\n    if(props.items.length===0) {\n        return (<h2 className=\"expenses-list__fallback\">No Expenses Found.</h2>)\n    }\n    return(\n        <ul className = \"expenses-list\">\n        {props.items.map((expense) => (\n            <ExpenseItem\n                key={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n            />\n        ))}\n        </ul>\n    )\n}\nexport default ExpensesList","import React from \"react\";\nimport './ChartBar.css'\nconst ChartBar = (props)=>{\n    let barFillheight='0%'\n    if(props.maxValue>0){\n        barFillheight=Math.round((props.value/props.maxValue)*100)+'%'\n    }\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div \n                    className=\"chart-bar__fill\" \n                    style={{ height: barFillheight}}\n                ></div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    )\n}\nexport default ChartBar","import React from \"react\";\nimport ChartBar from './ChartBar'\nimport './Chart.css'\nconst Chart = (props) => {\n    const dataPointValues= props.dataPoints.map(dataPoint => dataPoint.value)\n    const totalMaximum = Math.max(...dataPointValues)\n    return (\n        <div className=\"chart\">\n            {props.dataPoints.map(dataPoint => (\n                <ChartBar\n                    key={dataPoint.label}\n                    value={dataPoint.value}\n                    maxValue={totalMaximum}\n                    label={dataPoint.label}\n                />\n            ))}\n        </div>\n    )\n}\nexport default Chart","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label: 'Jan', value: '0' },\n        { label: 'Feb', value: '0' },\n        { label: 'Mar', value: '0' },\n        { label: 'Apr', value: '0' },\n        { label: 'May', value: '0' },\n        { label: 'Jun', value: '0' },\n        { label: 'Jul', value: '0' },\n        { label: 'Aug', value: '0' },\n        { label: 'Sep', value: '0' },\n        { label: 'Oct', value: '0' },\n        { label: 'Nov', value: '0' },\n        { label: 'Dec', value: '0' }\n    ]\n    for(const expense of props.expenses){\n        const expenseMonth= expense.date.getMonth()\n        chartDataPoints[expenseMonth].value +=expense.amount\n    }\n    return <Chart dataPoints={chartDataPoints} />\n}\n\nexport default ExpensesChart ","import { useState } from \"react/cjs/react.development\";\nimport Card from \"../UI/Card\";\nimport './Expenses.css'\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n\n    const [filteredYear, setFilteredYear] = useState('2020')\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear)\n    }\n    const filteredExpenses = props.items.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear\n    })\n\n    return (\n        <Card className=\"expenses\">\n            <ExpenseFilter\n                selected={filteredYear}\n                onChangeFilter={filterChangeHandler}\n            />\n            <ExpensesChart expenses = {filteredExpenses} />\n            <ExpensesList items={filteredExpenses} />\n        </Card>\n    )\n}\nexport default Expenses","import React, { useState } from \"react\";\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState('')\n    const [enteredAmount, setEnteredAmount] = useState('')\n    const [enteredDate, setEnteredDate] = useState('')\n\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // })\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value)\n        // setUserInput({\n        //     ...userInput,\n        //      enteredTitle:event.target.value\n        // })\n        // setUserInput((prevState)=>{\n        //     return({...prevState, enteredTitle:event.target.value})\n        // })\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value)\n    }\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value)\n    }\n    const submitHandler = (event) => {\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n        props.onSaveExpenseData(expenseData) \n        setEnteredTitle('')\n        setEnteredAmount('')\n        setEnteredDate('')\n    }\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        placeholder = \"Enter Title\"\n                        value={enteredTitle}\n                        onChange={titleChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input\n                        type=\"number\" \n                        min='0.05' \n                        step='0.01'\n                        placeholder = \"Enter Amount\"\n                        value={enteredAmount}\n                        onChange={amountChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input\n                        type=\"date\" \n                        min='2020-01-01' \n                        max='2022-01-01'\n                        value={enteredDate}\n                        onChange={dateChangeHandler} \n                    />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type='submit'>Add Expense</button>\n            </div>\n        </form>\n    )\n}\nexport default ExpenseForm\n","import React from \"react\"\nimport './NewExpense.css'\nimport ExpenseForm from \"./ExpenseForm\"\n\nconst NewExpense = (props)=>{\n    const onSaveExpenseDataHandler=(enteredExpenseData)=>{\n        const expenseData={\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n        props.onAddExpense(expenseData)\n    }\n    return(\n        <div className=\"new-expense\">\n            <ExpenseForm onSaveExpenseData ={onSaveExpenseDataHandler} />\n        </div>\n    )\n}\nexport default NewExpense","import { useState } from 'react';\nimport './App.css';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  { id:'e1', title: \"Toilet Paper\", amount: 194.67, date: new Date(2021, 9, 1) },\n  { id:'e2', title: \"New TV\", amount: 799.67, date: new Date(2021, 8, 1) },\n  { id:'e3', title: \"New Desk (Wooden)\", amount: 450.05, date: new Date(2021, 6, 1) },\n  { id:'e4', title: \"Car Insurance\", amount: 294.67, date: new Date(2020, 9, 1) },\n]\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n  const addExpenseHandler = (expense)=>{\n    setExpenses(prevExpenses =>{\n      return [expense, ...prevExpenses]\n    })\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} /> \n      <Expenses items= {expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}