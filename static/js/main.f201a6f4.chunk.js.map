{"version":3,"sources":["components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Expenses","ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","placeholder","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","DUMMY_EXPENSES","App","setExpenses","expense","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mdA6BeA,I,OCsDAC,G,YAhFK,SAACC,GACjB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAqCA,OACI,uBAAMC,SAbY,SAACC,GACnBA,EAAMC,iBACN,IAAMC,EAAc,CAChBC,MAAOV,EACPW,OAAQT,EACRU,KAAM,IAAIC,KAAKT,IAEnBN,EAAMgB,kBAAkBL,GACxBR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAGf,UACI,sBAAKU,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,0CACA,uBACIC,KAAK,OACLC,YAAc,cACdC,MAAOlB,EACPmB,SAtCO,SAACZ,GACxBN,EAAgBM,EAAMa,OAAOF,aAwCrB,sBAAKH,UAAU,uBAAf,UACI,2CACA,uBACIC,KAAK,SACLK,IAAI,OACJC,KAAK,OACLL,YAAc,eACdC,MAAOhB,EACPiB,SAtCQ,SAACZ,GACzBJ,EAAiBI,EAAMa,OAAOF,aAwCtB,sBAAKH,UAAU,uBAAf,UACI,yCACA,uBACIC,KAAK,OACLK,IAAI,aACJE,IAAI,aACJL,MAAOd,EACPe,SA7CM,SAACZ,GACvBF,EAAeE,EAAMa,OAAOF,gBAgDxB,qBAAKH,UAAU,uBAAf,SACI,wBAAQC,KAAK,SAAb,gCC5DDQ,EAdI,SAAC1B,GAQhB,OACI,qBAAKiB,UAAU,cAAf,SACI,cAAC,EAAD,CAAaD,kBATU,SAACW,GAC5B,IAAMhB,EAAY,2BACXgB,GADU,IAEbC,GAAIC,KAAKC,SAASC,aAEtB/B,EAAMgC,aAAarB,SCLrBsB,EAAiB,CACrB,CAAEL,GAAG,KAAMhB,MAAO,eAAgBC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,IAC1E,CAAEa,GAAG,KAAMhB,MAAO,SAAUC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,IACpE,CAAEa,GAAG,KAAMhB,MAAO,oBAAqBC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,IAC/E,CAAEa,GAAG,KAAMhB,MAAO,gBAAiBC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAmB9DmB,MAhBf,WACE,MAAgCjC,mBAASgC,GAAzC,mBAAiBE,GAAjB,WAMA,OACE,gCACE,yCACA,cAAC,EAAD,CAAYH,aARU,SAACI,GACzBD,GAAY,SAAAE,GACV,MAAM,CAAED,GAAR,mBAAoBC,cCJXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f201a6f4.chunk.js","sourcesContent":["import { useState } from \"react/cjs/react.development\";\nimport Card from \"../UI/Card\";\nimport './Expenses.css'\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n\n    const [filteredYear, setFilteredYear] = useState('2020')\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear)\n    }\n    const filteredExpenses = props.items.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear\n    })\n\n    return (\n        <Card className=\"expenses\">\n            <ExpenseFilter\n                selected={filteredYear}\n                onChangeFilter={filterChangeHandler}\n            />\n            <ExpensesChart expenses = {filteredExpenses} />\n            <ExpensesList items={filteredExpenses} />\n        </Card>\n    )\n}\nexport default Expenses","import React, { useState } from \"react\";\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState('')\n    const [enteredAmount, setEnteredAmount] = useState('')\n    const [enteredDate, setEnteredDate] = useState('')\n\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // })\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value)\n        // setUserInput({\n        //     ...userInput,\n        //      enteredTitle:event.target.value\n        // })\n        // setUserInput((prevState)=>{\n        //     return({...prevState, enteredTitle:event.target.value})\n        // })\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value)\n    }\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value)\n    }\n    const submitHandler = (event) => {\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n        props.onSaveExpenseData(expenseData) \n        setEnteredTitle('')\n        setEnteredAmount('')\n        setEnteredDate('')\n    }\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        placeholder = \"Enter Title\"\n                        value={enteredTitle}\n                        onChange={titleChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input\n                        type=\"number\" \n                        min='0.05' \n                        step='0.01'\n                        placeholder = \"Enter Amount\"\n                        value={enteredAmount}\n                        onChange={amountChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input\n                        type=\"date\" \n                        min='2020-01-01' \n                        max='2022-01-01'\n                        value={enteredDate}\n                        onChange={dateChangeHandler} \n                    />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type='submit'>Add Expense</button>\n            </div>\n        </form>\n    )\n}\nexport default ExpenseForm\n","import React from \"react\"\nimport './NewExpense.css'\nimport ExpenseForm from \"./ExpenseForm\"\n\nconst NewExpense = (props)=>{\n    const onSaveExpenseDataHandler=(enteredExpenseData)=>{\n        const expenseData={\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n        props.onAddExpense(expenseData)\n    }\n    return(\n        <div className=\"new-expense\">\n            <ExpenseForm onSaveExpenseData ={onSaveExpenseDataHandler} />\n        </div>\n    )\n}\nexport default NewExpense","import { useState } from 'react';\nimport './App.css';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  { id:'e1', title: \"Toilet Paper\", amount: 194.67, date: new Date(2021, 9, 1) },\n  { id:'e2', title: \"New TV\", amount: 799.67, date: new Date(2021, 8, 1) },\n  { id:'e3', title: \"New Desk (Wooden)\", amount: 450.05, date: new Date(2021, 6, 1) },\n  { id:'e4', title: \"Car Insurance\", amount: 294.67, date: new Date(2020, 9, 1) },\n]\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n  const addExpenseHandler = (expense)=>{\n    setExpenses(prevExpenses =>{\n      return [expense, ...prevExpenses]\n    })\n  }\n  return (\n    <div>\n      <h2>I am H2</h2>\n      <NewExpense onAddExpense={addExpenseHandler} /> \n      {/* <Expenses items= {expenses}/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}